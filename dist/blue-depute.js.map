{"version":3,"sources":["webpack://BlueDepute/webpack/universalModuleDefinition","webpack://BlueDepute/webpack/bootstrap","webpack://BlueDepute/./src/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,8BAA8B,EAAE;AAChC,+BAA+B,EAAE;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACc,yEAAU,EAAC","file":"blue-depute.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlueDepute\"] = factory();\n\telse\n\t\troot[\"BlueDepute\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * 委托事件详情数据\r\n */\r\nvar DeputeEvent = /** @class */ (function () {\r\n    function DeputeEvent(opts) {\r\n        this.data = opts.data;\r\n        this.type = opts.type;\r\n        this.eventId = opts.eventId;\r\n    }\r\n    return DeputeEvent;\r\n}());\r\n//空函数\r\nfunction noop() { }\r\n/**\r\n * 委托类：\r\n * 可在相关委托中委托事件进行处理\r\n */\r\nvar BlueDepute = /** @class */ (function () {\r\n    //构造器\r\n    function BlueDepute(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        //配置项\r\n        this.opts = Object.assign({\r\n            eventIdSymbol: \"$\",\r\n        }, opts);\r\n        //收集委托事件\r\n        this.events = {};\r\n        //相关委托钩子\r\n        this.hooks = Object.assign({\r\n            on: function () { },\r\n            off: function () { },\r\n            emit: function () { },\r\n        }, opts.hooks);\r\n    }\r\n    /**\r\n     * 注册委托：同一个事件委托可以存在多个，不设置相关的事件id处理，将会全部委托统一处理，\r\n     * 如果提供了指定的事件委托id，这里会按照指定的委托id进行处理\r\n     * */\r\n    BlueDepute.prototype.on = function (type, handler, opts) {\r\n        if (handler === void 0) { handler = noop; }\r\n        if (opts === void 0) { opts = {}; }\r\n        var events = this.events;\r\n        var current = events[type];\r\n        if (!current) {\r\n            //创建事件容器\r\n            current = events[type] = {\r\n                queue: [],\r\n                type: type,\r\n            };\r\n        }\r\n        //生成事件eventId\r\n        var eventId = this.genEventId();\r\n        //写入到队列中处理\r\n        current.queue.push({\r\n            //事件处理\r\n            handler: handler,\r\n            //记录事件eventId\r\n            eventId: eventId,\r\n            //配置存储\r\n            opts: opts,\r\n        });\r\n        //执行的相关on钩子\r\n        this.eventHook({\r\n            name: \"on\",\r\n            //事件类型\r\n            type: type,\r\n            //记录事件eventId\r\n            eventId: eventId,\r\n        });\r\n        return eventId;\r\n    };\r\n    /**\r\n     * 一次注册委托：适用该方法注册委托，只会进行一次性的消费后会自动注销委托，\r\n     * 相关的注销hooks也会进行相关的执行处理\r\n     */\r\n    BlueDepute.prototype.once = function (type, handler) {\r\n        return this.on(type, handler, {\r\n            once: true,\r\n        });\r\n    };\r\n    /**\r\n     * 注销委托,可针对指定的eventId进行注销处理，不存在eventId时，会对当前命中的type事件全部注销\r\n     * */\r\n    BlueDepute.prototype.off = function (_type, handler) {\r\n        var _a = this.getType(_type), type = _a[0], eventId = _a[1];\r\n        var current = this.findEvent(type);\r\n        if (!current)\r\n            return false;\r\n        var queue = current.queue;\r\n        //不存在，全部处理删除\r\n        if (handler === undefined) {\r\n            //删除所有的\r\n            while (queue.length) {\r\n                var current_1 = queue.pop();\r\n                //执行的相关off钩子\r\n                this.eventHook({\r\n                    name: \"off\",\r\n                    //事件类型\r\n                    type: type,\r\n                    //事件ID\r\n                    eventId: current_1.eventId,\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n        var index = -1;\r\n        while ((index = queue.findIndex(function (item) {\r\n            return (eventId === undefined || eventId === item.eventId) &&\r\n                item.handler === handler;\r\n        })) !== -1) {\r\n            var current_2 = null;\r\n            //全量删除\r\n            if (eventId === undefined) {\r\n                current_2 = queue.splice(index, 1)[0];\r\n            }\r\n            else if (queue[index].eventId === eventId) {\r\n                //指定eventId处理删除\r\n                current_2 = queue.splice(index, 1)[0];\r\n            }\r\n            //执行的相关off钩子\r\n            this.eventHook({\r\n                name: \"off\",\r\n                //事件类型\r\n                type: type,\r\n                //事件ID\r\n                eventId: current_2.eventId,\r\n            });\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * 处理委托\r\n     * */\r\n    BlueDepute.prototype.emit = function (_type, data) {\r\n        var _this = this;\r\n        var _a = this.getType(_type), type = _a[0], eventId = _a[1];\r\n        var current = this.findEvent(type);\r\n        if (!current) {\r\n            console.log(\"warn not find \" + type + \" event in current Depute\");\r\n            return false;\r\n        }\r\n        current.queue.forEach(function (item) {\r\n            if (!(eventId === undefined || item.eventId === eventId))\r\n                return;\r\n            //执行相关的委托处理\r\n            _this.hook(_this, item.handler, [\r\n                //委托详情\r\n                new DeputeEvent({\r\n                    data: data,\r\n                    type: type,\r\n                    eventId: item.eventId,\r\n                }),\r\n            ]);\r\n            //执行的相关off钩子\r\n            _this.eventHook({\r\n                name: \"emit\",\r\n                //事件类型\r\n                type: type,\r\n                eventId: item.eventId,\r\n            });\r\n            //是否一次消费,消费后删除该事件处理\r\n            if (item.opts.once) {\r\n                _this.off(\"\" + type + _this.opts.eventIdSymbol + item.eventId, item.handler);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * 执行相关hooks回调\r\n     * */\r\n    BlueDepute.prototype.eventHook = function (opts) {\r\n        var hooks = this.hooks;\r\n        var currentHook = hooks[opts.name];\r\n        if (!currentHook)\r\n            return;\r\n        this.hook(this, currentHook, [opts]);\r\n    };\r\n    /**\r\n     * 通用执行方法\r\n     * */\r\n    BlueDepute.prototype.hook = function (ctx, handler, args) {\r\n        if (args === void 0) { args = []; }\r\n        if (typeof handler === \"function\") {\r\n            return handler.apply(ctx, args);\r\n        }\r\n        return handler;\r\n    };\r\n    /**\r\n     * 生成事件eventId\r\n     * */\r\n    BlueDepute.prototype.genEventId = function () {\r\n        return ++BlueDepute._eventId;\r\n    };\r\n    /**\r\n     * 查找委托类型对象\r\n     * */\r\n    BlueDepute.prototype.findEvent = function (type) {\r\n        return this.events[type] || null;\r\n    };\r\n    /**\r\n     * 获取与解析类型，对于类型可能存在指定eventId的处理\r\n     * */\r\n    BlueDepute.prototype.getType = function (_type) {\r\n        var _a = _type.split(this.opts.eventIdSymbol), type = _a[0], _eventId = _a[1];\r\n        var eventId = parseInt(_eventId);\r\n        if (!eventId) {\r\n            eventId = undefined;\r\n        }\r\n        return [type, eventId];\r\n    };\r\n    //自增的事件id存储\r\n    BlueDepute._eventId = 0;\r\n    return BlueDepute;\r\n}());\r\nexport default BlueDepute;\r\n"],"sourceRoot":""}